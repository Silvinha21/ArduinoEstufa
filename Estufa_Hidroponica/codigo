#include <ESP8266WiFi.h>
#include <ESP8266HTTPClient.h>
#include <ArduinoJson.h>
#include "DHT.h"
#include <OneWire.h>
#include <DallasTemperature.h>

// Pinos e Sensores
#define DHTPIN D5
#define DHTTYPE DHT11
#define ONE_WIRE_BUS D6
#define LDR_PIN A0
#define LED_PIN D1
#define BOMBA_PIN D2
#define VENT_PIN D3

DHT dht(DHTPIN, DHTTYPE);
OneWire oneWire(ONE_WIRE_BUS);
DallasTemperature sensors(&oneWire);
DeviceAddress sensorAgua;

// Bagui do WIFI
const char* ssid = "SUA_REDE_WIFI";
const char* password = "SUA_SENHA";

// Intervalo
unsigned long ultimoEnvio = 0;
const unsigned long intervalo = 10000; // 10s

void setup() {
  Serial.begin(9600);
  dht.begin();
  sensors.begin();
  WiFi.begin(ssid, password);

  pinMode(LDR_PIN, INPUT);
  pinMode(LED_PIN, OUTPUT);
  pinMode(BOMBA_PIN, OUTPUT);
  pinMode(VENT_PIN, OUTPUT);

  digitalWrite(LED_PIN, LOW);
  digitalWrite(BOMBA_PIN, LOW);
  digitalWrite(VENT_PIN, LOW);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  Serial.println("Wi-Fi conectado!");
  if (!sensors.getAddress(sensorAgua, 0)) {
    Serial.println("Sensor de temperatura da água não encontrado!");
  }
}

void loop() {
  unsigned long agora = millis();
  if (agora - ultimoEnvio >= intervalo) {
    ultimoEnvio = agora;

    float tempAr = dht.readTemperature();
    float umidAr = dht.readHumidity();
    sensors.requestTemperatures();
    float tempAgua = sensors.getTempC(sensorAgua);
    int ilumi = map(analogRead(LDR_PIN), 0, 1023, 0, 100);

    // Simulações (pH, nutrientes) — Depois trocar por sensores (Eu acho que tem sensores para nutrientes)
    float phAgua = 6.8;
    int nutrientes = 450;

    bool ventilador = tempAr > 28;
    bool iluminacao = ilumi < 30;
    bool bomba = true;

    digitalWrite(VENT_PIN, ventilador ? HIGH : LOW);
    digitalWrite(LED_PIN, iluminacao ? HIGH : LOW);
    digitalWrite(BOMBA_PIN, bomba ? HIGH : LOW);

    if (WiFi.status() == WL_CONNECTED) {
      HTTPClient http;
      http.begin("http://localhost:8000/estufa");
      http.addHeader("Content-Type", "application/json");

      // Formato JSON
      StaticJsonDocument<256> doc;
      doc["estufa_id"] = "1";
      doc["temperatura_ar"] = tempAr;
      doc["umidade_ar"] = umidAr;
      doc["temperatura_agua"] = tempAgua;
      doc["luminosidade"] = ilumi;
      doc["ph_agua"] = phAgua;
      doc["nutrientes"] = nutrientes;
      doc["ventilacao"] = ventilador;
      doc["iluminacao"] = iluminacao;
      doc["bomba_agua"] = bomba;

      String jsonStr;
      serializeJson(doc, jsonStr);

      int httpCode = http.POST(jsonStr);
      if (httpCode > 0) {
        Serial.print("POST enviado. Código: ");
        Serial.println(httpCode);
        Serial.println(http.getString());
      } else {
        Serial.print("Erro no POST: ");
        Serial.println(http.errorToString(httpCode));
      }

      http.end();
    }
  }
}
