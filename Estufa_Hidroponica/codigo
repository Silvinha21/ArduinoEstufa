#include "DHT.h"
#include <OneWire.h>
#include <DallasTemperature.h>

#define ONE_WIRE_BUS 6 // Sensor de temperatura da água
OneWire oneWire(ONE_WIRE_BUS);        
DallasTemperature sensors(&oneWire);
DeviceAddress sensorAgua;

#define DHTPIN 5 // DHT11
#define DHTTYPE DHT11

DHT dht(DHTPIN, DHTTYPE);

int pinLDR = A0;
int pinLed = 4;
int pinBomba = 2;
int pinVent = 3;

const unsigned long intervaloIrrigacao = 600000; // 10 minutos
unsigned long ultimoTempoIrrigacao = 0;

const unsigned long intervaloControle = 1000; // 1 segundo
unsigned long ultimoTempoControle = 0;

bool ligado = false;

void setup() {
  Serial.begin(9600);
  dht.begin();
  sensors.begin();

  if (!sensors.getAddress(sensorAgua, 0)){
     Serial.println("Sensor de temperatura da água não encontrado!");
  } 

  pinMode(pinLDR, INPUT);
  pinMode(pinVent, OUTPUT);
  pinMode(pinLed, OUTPUT);
  pinMode(pinBomba, OUTPUT);

  digitalWrite(pinBomba, LOW);
  digitalWrite(pinLed, LOW);
  digitalWrite(pinVent, LOW);
}

void loop() {
  unsigned long agora = millis();

  // Controle de sensores (iluminação, ventilação)
  if (agora - ultimoTempoControle >= intervaloControle) {
    ultimoTempoControle = agora;

    // Leitura da luminosidade
    int ilumi = map(analogRead(pinLDR), 0, 1023, 0, 100);
    digitalWrite(pinLed, ilumi > 30 ? HIGH : LOW);

    // Leitura da temperatura do ar e da água
    float tmpAr = dht.readTemperature();
    sensors.requestTemperatures();
    float tempAgua = sensors.getTempC(sensorAgua);

    // Controle do ventilador com base na temperatura do ar
    digitalWrite(pinVent, tmpAr > 28 ? HIGH : LOW); // Exemplo: ligar se >28ºC

    // Log no formato JSON (para monitoramento serial)
    Serial.print("{");
    Serial.print("\"temperatura_ar\":"); Serial.print(tmpAr); Serial.print(",");
    Serial.print("\"temperatura_agua\":"); Serial.print(tempAgua); Serial.print(",");
    Serial.print("\"luminosidade\":"); Serial.print(ilumi); Serial.print(",");
    Serial.print("\"ventilador\":"); Serial.print(digitalRead(pinVent)); Serial.print(",");
    Serial.print("\"led\":"); Serial.print(digitalRead(pinLed)); Serial.print(",");
    Serial.print("\"bomba\":"); Serial.print(digitalRead(pinBomba));
    Serial.println("}");
  }

  // Controle da bomba de irrigação a cada 10 minutos
  if (agora - ultimoTempoIrrigacao >= intervaloIrrigacao) {
    ligado = !ligado;
    digitalWrite(pinBomba, ligado ? HIGH : LOW);
    ultimoTempoIrrigacao = agora;
  }
}
